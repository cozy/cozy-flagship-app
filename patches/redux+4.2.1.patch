diff --git a/node_modules/redux/lib/redux.js b/node_modules/redux/lib/redux.js
index 8a39141..752ab8e 100644
--- a/node_modules/redux/lib/redux.js
+++ b/node_modules/redux/lib/redux.js
@@ -3,6 +3,11 @@
 Object.defineProperty(exports, '__esModule', { value: true });
 
 var _objectSpread = require('@babel/runtime/helpers/objectSpread2');
+// Cozy override: Add react-native-performance measurements
+//*
+var uniqueId = require('lodash/uniqueId');
+var rnperformance = require('react-native-performance').default;
+//*/
 
 function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }
 
@@ -279,6 +284,11 @@ function createStore(reducer, preloadedState, enhancer) {
 
 
   function dispatch(action) {
+    // Cozy override: Add react-native-performance measurements
+    //*
+    const markName = `dispatch ${uniqueId()}`
+    rnperformance.mark(markName)
+    //*/
     if (!isPlainObject(action)) {
       throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(action) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
     }
@@ -302,9 +312,32 @@ function createStore(reducer, preloadedState, enhancer) {
 
     for (var i = 0; i < listeners.length; i++) {
       var listener = listeners[i];
+      // Cozy override: Add react-native-performance measurements
+      //*
+      const markNamecurrentReducer = `dispatchlistener ${uniqueId()}`
+      rnperformance.mark(markNamecurrentReducer)
+      //*/
       listener();
+      // Cozy override: Add react-native-performance measurements
+      //*
+      rnperformance.measure(markNamecurrentReducer, {
+        start: markNamecurrentReducer,
+        detail: {
+          category: 'REDUX'
+        }
+      })
+      //*/
     }
 
+    // Cozy override: Add react-native-performance measurements
+    //*
+    rnperformance.measure(markName, {
+      start: markName,
+      detail: {
+        category: 'REDUX'
+      }
+    })
+    //*/
     return action;
   }
   /**
